test<-data[folds==i,]
truth<-test$y
fit5<-glm(y~age + psi, data=train, family="binomial")
probs<-predict(fit5,newdata = test,type="response")
diags<-rbind(diags,class_diag(probs,truth))}
for(i in 1:k){
train<-data[folds!=i,]
test<-data[folds==i,]
truth<-test$y
fit5<-glm(y~age + psi, data=train, family="binomial")
probs<-predict(fit5,newdata = test,type="response")
diags<-rbind(diags,class_diag(probs,truth))}
library(knitr)
hook_output = knit_hooks$get('output')
knit_hooks$set(output = function(x, options) {
# this hook is used only when the linewidth option is not NULL
if (!is.null(n <- options$linewidth)) {
x = knitr:::split_lines(x)
# any lines wider than n should be wrapped
if (any(nchar(x) > n)) x = strwrap(x, width = n)
x = paste(x, collapse = '\n')
}
hook_output(x, options)
})
knitr::opts_chunk$set(echo = TRUE, eval = TRUE,fig.align="center",warning=FALSE,message=FALSE,fig.width=8, fig.height=5, linewidth=60)
options(tibble.width = 100,width = 100)
library(tidyverse)
social<-read.csv("socsupport.csv")
social<-social%>%dplyr::select(-firstyr,-enrolment,-BDI,-emotionalsat,-X,-tangiblesat,-affectsat,-psisat,-esupport,-psupport)
head(social)
man1<-manova(cbind(emotional, tangible, affect,psi,supsources)~livewith,data=social)
summary(man1) ### 1 manova
summary.aov(man1) ### 2 anovas
pairwise.t.test(social$tangible, social$livewith, p.adj = "none") ###15
pairwise.t.test(social$affect, social$livewith, p.adj = "none") ###15
0.05/(1+2+15+15)
obs_F<-5.3107
Fs<-replicate(5000,{
new<-social%>%mutate(affect=sample(affect))
SSW<- new%>%group_by(livewith)%>%summarize(SSW=sum((affect-mean(affect))^2))%>% summarize(sum(SSW))%>%pull
SSB<- new%>%mutate(mean=mean(affect))%>%group_by(livewith)%>%mutate(groupmean=mean(affect))%>%summarize(SSB=sum((mean-groupmean)^2))%>%summarize(sum(SSB))%>%pull
(SSB/5)/(SSW/86)
})
hist(Fs, prob=T); abline(v = obs_F, col="red",add=T)
mean(Fs>obs_F)
library(sandwich)
library(lmtest)
fit3<-lm(emotional ~ affect * psi, data=social)
summary(fit3)
#mean center numeric variable
social$psi_c <- social$psi - mean(social$psi)
social$affect_c<- social$affect - mean(social$affect)
fitcenter<-lm(emotional ~ affect_c*psi_c, data=social)
summary(fitcenter)
#plot
new1<-social
new1$affect_c<-mean(social$affect_c)
new1$mean<-predict(fitcenter,new1)
new1$affect_c<-mean(social$affect_c)+sd(social$affect_c)
new1$plus.sd<-predict(fitcenter,new1)
new1$affect_c<-mean(social$affect_c)-sd(social$affect_c)
new1$minus.sd<-predict(fitcenter,new1)
newint<-new1%>%select(emotional,psi_c,mean,plus.sd,minus.sd)%>%gather(affect,value,-emotional,-psi_c)
mycols<-c("#619CFF","#F8766D","#00BA38")
names(mycols)<-c("-1 sd","mean","+1 sd")
mycols=as.factor(mycols)
ggplot(social,aes(psi_c,emotional),group=mycols)+geom_point()+geom_line(data=new1,aes(y=mean,color="mean"))+geom_line(data=new1,aes(y=plus.sd,color="+1 sd"))+geom_line(data=new1,aes(y=minus.sd,color="-1 sd"))+scale_color_manual(values=mycols)+labs(color="affect (cont)")+theme(legend.position=c(.9,.2))
#assumptions
resids<-fit3$residuals
fitvals<-fit3$fitted.values
ggplot()+geom_point(aes(fitvals,resids))+geom_hline(yintercept=0, col="red")
ggplot()+geom_histogram(aes(resids),bins=20)
ggplot()+geom_qq(aes(sample=resids))+geom_qq_line(aes(sample=resids), color='red')
#robust SE
coeftest(fitcenter, vcov = vcovHC(fitcenter))
boot_social<- sample_frac(social, replace=T)
samp_distn<-replicate(5000, {
boot_social <- sample_frac(social, replace=T)
fitcenter<-lm(emotional ~ affect_c * psi_c, data=boot_social)
coef(fitcenter)
})
samp_distn %>% t %>% as.data.frame %>% summarize_all(sd)
samp_distn %>% t %>% as.data.frame %>% gather %>% group_by(key) %>%summarize(lower=quantile(value,.025), upper=quantile(value,.975))
library(plotROC)
library(glmnet)
social<-social%>%dplyr::select(-psi_c,-affect_c)
social5 <- social %>% mutate(y = ifelse(gender == "female", 1, 0))
fit5<-glm(y~age + psi, family="binomial", data=social5)
coeftest(fit5)
exp(0.256087)
exp(0.467230)
exp(-1.766909)
exp( 0.024245)
exp(0.043900)
#confusion matrix
prob<-predict(fit5,type="response")
table(predict=as.numeric(prob>.5),truth=social5$y)%>%addmargins
69/71 #tpr
4/24 #tnr
69/89 #ppv
#plot
social5$logit<-predict(fit5,type="link")
social5%>%ggplot()+geom_density(aes(logit,color=gender,fill=gender), alpha=.4)+
theme(legend.position=c(.85,.85))+
geom_vline(xintercept=0)+xlab("logit(log-odds)")+
geom_rug(aes(logit,color=gender))+
geom_text(x=-5,y=.07,label="TN = 4")+
geom_text(x=-1.75,y=.008,label="FN = 2")+
geom_text(x=1,y=.006,label="FP = 20")+
geom_text(x=5,y=.04,label="TP = 69")
#roc curve and auc
pred <- ifelse(prob > 0.5, 1, 0)
ROCplot <- ggplot(social5) + geom_roc(aes(d = y, m = prob), n.cuts = 0) +geom_segment(aes(x = 0, xend = 1, y = 0, yend = 1), lty = 2)
ROCplot
calc_auc(ROCplot)
#10 fold
class_diag <- function(probs,truth){
tab<-table(factor(probs>.5,levels=c("FALSE","TRUE")),truth)
acc=sum(diag(tab))/sum(tab)
sens=tab[2,2]/colSums(tab)[2]
spec=tab[1,1]/colSums(tab)[1]
ppv=tab[2,2]/rowSums(tab)[2]
if(is.numeric(truth)==FALSE & is.logical(truth)==FALSE) truth<-as.numeric(truth)-1
ord<-order(probs, decreasing=TRUE)
probs <- probs[ord]; truth <- truth[ord]
TPR=cumsum(truth)/max(1,sum(truth))
FPR=cumsum(!truth)/max(1,sum(!truth))
dup<-c(probs[-1]>=probs[-length(probs)], FALSE)
TPR<-c(0,TPR[!dup],1); FPR<-c(0,FPR[!dup],1)
n <- length(TPR)
auc<- sum( ((TPR[-1]+TPR[-n])/2) * (FPR[-1]-FPR[-n]) )
data.frame(acc,sens,spec,ppv,auc)
}
set.seed(1234)
k=10
data<-social5[sample(nrow(social5)),]
folds<-cut(seq(1:nrow(social5)),breaks=k,labels=F)
diags<-NULL
for(i in 1:k){
train<-data[folds!=i,]
test<-data[folds==i,]
truth<-test$y
fit5<-glm(y~age + psi, data=train, family="binomial")
probs<-predict(fit5,newdata = test,type="response")
diags<-rbind(diags,class_diag(probs,truth))}
install.packages("GGally")
knitr::opts_chunk$set(echo = TRUE)
###Data sets
library(tidyverse)
USArrests<-read.csv("USArrests.csv")
StatesEdu<-read.csv("StatesEdu.csv")
glimpse(USArrests)
glimpse(StatesEdu)
###Joining
#observation CO in USArrests contains a space whereas CO in StatesEdu doesn't
#to get rid of the space
USArrests<-USArrests%>%mutate(State=str_trim(State,"right"))
bothdata<-inner_join(USArrests, StatesEdu, by="State")
bothdata
anti_join(USArrests,StatesEdu)
anti_join(StatesEdu,USArrests)
###Wrangling
summary(bothdata$pay)
bothdata<-bothdata%>%group_by(pay)%>%
mutate(pay_cat = case_when(pay>36~"high",29<=pay &
pay<=36 ~"med",pay<29~"low"))
bothdata<-bothdata%>% mutate(percent_cat=factor(ntile(percent,2),
levels=1:2,labels=c("lower","higher")))
bothdata%>%filter(region=="SA")%>%select(State,pay_cat,Assault)%>%
arrange(desc(Assault))
#finding summary statistics for each numeric variable overall
bothdata%>%mutate(sdSATM=sd(SATM,na.rm=T))
#finding summary statistics for numeric variable after grouping
bothdata%>%group_by(percent_cat)%>%summarize(max(pop))
bothdata%>%group_by(percent_cat)%>%summarize(median(dollars))
bothdata%>%group_by(percent_cat)%>%summarize_at(c("UrbanPop","pop","pay"), var)
bothdata%>%group_by(region)%>%summarize(mean(pay))
bothdata%>% group_by(region)%>%summarize(cor(dollars, SATM))
bothdata%>%group_by(region)%>%summarize_at(c("Assault","Murder","Rape"), IQR)
bothdata%>%group_by(pay_cat)%>%summarize(cor(UrbanPop,percent))
#one statistic from grouping two categorical variables
bothdata%>%group_by(region,pay_cat)%>%summarize_at("SATV",
min)%>%pivot_wider(names_from=pay_cat,values_from=SATV)
###Visualizing (correlation heatmap of numeric variables)
bothdata%>%select_if(is.numeric)%>%cor%>%as.data.frame%>%
rownames_to_column%>%pivot_longer(-1)%>%ggplot(aes(rowname,name,fill=value))+
geom_tile()+geom_text(aes(label=round(value,2)))+xlab("")+ylab("")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
scale_fill_gradient2(low="red",high="blue")
###Dimentionality Reduction
library(ggplot2)
library(cluster)
#choosing number of clusters
variables<-bothdata%>%select(Rape,pay,percent,pop)
sil_width<-vector()
for(i in 2:10){
pam_fit <- pam(variables, k=i)
sil_width[i] <- pam_fit$silinfo$avg.width
}
ggplot()+geom_line(aes(x=1:10,y=sil_width))+scale_x_continuous(name="k",breaks=1:10)
#interpreting Average Silhouette Width
pam1<- variables%>%pam(2)
plot(pam1, which=2)
library(GGally)
#visualize pairwise combinations
pamclust<-variables%>%ungroup%>%mutate(cluster=as.factor(pam1$clustering))
pamclust%>% ggpairs(columns = c(1,2,3,4), aes(color=cluster))
###Visualizing (ggplot 1)
ggplot(bothdata, aes(x=region, y=Murder, fill=percent_cat))+
scale_fill_hue(l=40)+geom_bar(stat="summary", fun.y="mean")+
ggtitle("Bar Chart of Murder Arrests vs Percent vs US Region") +
scale_y_continuous(breaks=seq(0,35,5))+xlab("Regions of US")+
ylab("Murder Arrests per 1000,000") +theme(axis.text.x=element_text(angle=90,hjust=1))
###Visualizing (ggplot 2)
ggplot(bothdata, aes(Assault, Rape, color=dollars))+geom_point()+
ggtitle("Scatterplot of Assault Arrest, Rape Arrests,
and State's Spending on Public Education")+
scale_color_gradient(low="yellow", high="red")+
xlab("Assault Arrests per 100,000")+ylab("Rape Arrests per 100,000")+theme_dark()
###Dimentionality Reduction
library(ggplot2)
library(cluster)
#choosing number of clusters
variables<-bothdata%>%select(Rape,pay,percent,pop)
sil_width<-vector()
for(i in 2:10){
pam_fit <- pam(variables, k=i)
sil_width[i] <- pam_fit$silinfo$avg.width
}
ggplot()+geom_line(aes(x=1:10,y=sil_width))+scale_x_continuous(name="k",breaks=1:10)
#interpreting Average Silhouette Width
pam1<- variables%>%pam(2)
plot(pam1, which=2)
library(GGally)
#visualize pairwise combinations
pamclust<-variables%>%ungroup%>%mutate(cluster=as.factor(pam1$clustering))
pamclust%>% ggpairs(columns = c(1,2,3,4), aes(color=cluster))
knitr::opts_chunk$set(echo = TRUE, eval = TRUE, fig.align = "center", warning = F, message = F, R.options=list(max.print=100))
knitr::opts_chunk$set(echo = TRUE)
blogdown:::insert_image_addin()
library(plotROC)
library(glmnet)
social<-social%>%dplyr::select(-psi_c,-affect_c)
library(knitr)
hook_output = knit_hooks$get('output')
knit_hooks$set(output = function(x, options) {
# this hook is used only when the linewidth option is not NULL
if (!is.null(n <- options$linewidth)) {
x = knitr:::split_lines(x)
# any lines wider than n should be wrapped
if (any(nchar(x) > n)) x = strwrap(x, width = n)
x = paste(x, collapse = '\n')
}
hook_output(x, options)
})
knitr::opts_chunk$set(echo = TRUE, eval = TRUE,fig.align="center",warning=FALSE,message=FALSE,fig.width=8, fig.height=5, linewidth=60)
options(tibble.width = 100,width = 100)
library(tidyverse)
social<-read.csv("socsupport.csv")
social<-social%>%dplyr::select(-firstyr,-enrolment,-BDI,-emotionalsat,-X,-tangiblesat,-affectsat,-psisat,-esupport,-psupport)
head(social)
man1<-manova(cbind(emotional, tangible, affect,psi,supsources)~livewith,data=social)
summary(man1) ### 1 manova
summary.aov(man1) ### 2 anovas
pairwise.t.test(social$tangible, social$livewith, p.adj = "none") ###15
pairwise.t.test(social$affect, social$livewith, p.adj = "none") ###15
0.05/(1+2+15+15)
obs_F<-5.3107
Fs<-replicate(5000,{
new<-social%>%mutate(affect=sample(affect))
SSW<- new%>%group_by(livewith)%>%summarize(SSW=sum((affect-mean(affect))^2))%>% summarize(sum(SSW))%>%pull
SSB<- new%>%mutate(mean=mean(affect))%>%group_by(livewith)%>%mutate(groupmean=mean(affect))%>%summarize(SSB=sum((mean-groupmean)^2))%>%summarize(sum(SSB))%>%pull
(SSB/5)/(SSW/86)
})
hist(Fs, prob=T); abline(v = obs_F, col="red",add=T)
mean(Fs>obs_F)
library(sandwich)
library(lmtest)
fit3<-lm(emotional ~ affect * psi, data=social)
summary(fit3)
#mean center numeric variable
social$psi_c <- social$psi - mean(social$psi)
social$affect_c<- social$affect - mean(social$affect)
fitcenter<-lm(emotional ~ affect_c*psi_c, data=social)
summary(fitcenter)
#plot
new1<-social
new1$affect_c<-mean(social$affect_c)
new1$mean<-predict(fitcenter,new1)
new1$affect_c<-mean(social$affect_c)+sd(social$affect_c)
new1$plus.sd<-predict(fitcenter,new1)
new1$affect_c<-mean(social$affect_c)-sd(social$affect_c)
new1$minus.sd<-predict(fitcenter,new1)
newint<-new1%>%select(emotional,psi_c,mean,plus.sd,minus.sd)%>%gather(affect,value,-emotional,-psi_c)
mycols<-c("#619CFF","#F8766D","#00BA38")
names(mycols)<-c("-1 sd","mean","+1 sd")
mycols=as.factor(mycols)
ggplot(social,aes(psi_c,emotional),group=mycols)+geom_point()+geom_line(data=new1,aes(y=mean,color="mean"))+geom_line(data=new1,aes(y=plus.sd,color="+1 sd"))+geom_line(data=new1,aes(y=minus.sd,color="-1 sd"))+scale_color_manual(values=mycols)+labs(color="affect (cont)")+theme(legend.position=c(.9,.2))
#assumptions
resids<-fit3$residuals
fitvals<-fit3$fitted.values
ggplot()+geom_point(aes(fitvals,resids))+geom_hline(yintercept=0, col="red")
ggplot()+geom_histogram(aes(resids),bins=20)
ggplot()+geom_qq(aes(sample=resids))+geom_qq_line(aes(sample=resids), color='red')
#robust SE
coeftest(fitcenter, vcov = vcovHC(fitcenter))
boot_social<- sample_frac(social, replace=T)
samp_distn<-replicate(5000, {
boot_social <- sample_frac(social, replace=T)
fitcenter<-lm(emotional ~ affect_c * psi_c, data=boot_social)
coef(fitcenter)
})
samp_distn %>% t %>% as.data.frame %>% summarize_all(sd)
samp_distn %>% t %>% as.data.frame %>% gather %>% group_by(key) %>%summarize(lower=quantile(value,.025), upper=quantile(value,.975))
library(plotROC)
library(glmnet)
social<-social%>%dplyr::select(-psi_c,-affect_c)
social5 <- social %>% mutate(y = ifelse(gender == "female", 1, 0))
fit5<-glm(y~age + psi, family="binomial", data=social5)
coeftest(fit5)
exp(0.256087)
exp(0.467230)
exp(-1.766909)
exp( 0.024245)
exp(0.043900)
#confusion matrix
prob<-predict(fit5,type="response")
table(predict=as.numeric(prob>.5),truth=social5$y)%>%addmargins
69/71 #tpr
4/24 #tnr
69/89 #ppv
#plot
social5$logit<-predict(fit5,type="link")
social5%>%ggplot()+geom_density(aes(logit,color=gender,fill=gender), alpha=.4)+
theme(legend.position=c(.85,.85))+
geom_vline(xintercept=0)+xlab("logit(log-odds)")+
geom_rug(aes(logit,color=gender))+
geom_text(x=-5,y=.07,label="TN = 4")+
geom_text(x=-1.75,y=.008,label="FN = 2")+
geom_text(x=1,y=.006,label="FP = 20")+
geom_text(x=5,y=.04,label="TP = 69")
#roc curve and auc
pred <- ifelse(prob > 0.5, 1, 0)
ROCplot <- ggplot(social5) + geom_roc(aes(d = y, m = prob), n.cuts = 0) +geom_segment(aes(x = 0, xend = 1, y = 0, yend = 1), lty = 2)
ROCplot
calc_auc(ROCplot)
#10 fold
class_diag <- function(probs,truth){
tab<-table(factor(probs>.5,levels=c("FALSE","TRUE")),truth)
acc=sum(diag(tab))/sum(tab)
sens=tab[2,2]/colSums(tab)[2]
spec=tab[1,1]/colSums(tab)[1]
ppv=tab[2,2]/rowSums(tab)[2]
if(is.numeric(truth)==FALSE & is.logical(truth)==FALSE) truth<-as.numeric(truth)-1
ord<-order(probs, decreasing=TRUE)
probs <- probs[ord]; truth <- truth[ord]
TPR=cumsum(truth)/max(1,sum(truth))
FPR=cumsum(!truth)/max(1,sum(!truth))
dup<-c(probs[-1]>=probs[-length(probs)], FALSE)
TPR<-c(0,TPR[!dup],1); FPR<-c(0,FPR[!dup],1)
n <- length(TPR)
auc<- sum( ((TPR[-1]+TPR[-n])/2) * (FPR[-1]-FPR[-n]) )
data.frame(acc,sens,spec,ppv,auc)
}
set.seed(1234)
k=10
data<-social5[sample(nrow(social5)),]
folds<-cut(seq(1:nrow(social5)),breaks=k,labels=F)
diags<-NULL
for(i in 1:k){
train<-data[folds!=i,]
test<-data[folds==i,]
truth<-test$y
fit5<-glm(y~age + psi, data=train, family="binomial")
probs<-predict(fit5,newdata = test,type="response")
diags<-rbind(diags,class_diag(probs,truth))}
library(plotROC)
library(glmnet)
social<-social%>%dplyr::select(-psi_c,-affect_c)
library(knitr)
hook_output = knit_hooks$get('output')
knit_hooks$set(output = function(x, options) {
# this hook is used only when the linewidth option is not NULL
if (!is.null(n <- options$linewidth)) {
x = knitr:::split_lines(x)
# any lines wider than n should be wrapped
if (any(nchar(x) > n)) x = strwrap(x, width = n)
x = paste(x, collapse = '\n')
}
hook_output(x, options)
})
knitr::opts_chunk$set(echo = TRUE, eval = TRUE,fig.align="center",warning=FALSE,message=FALSE,fig.width=8, fig.height=5, linewidth=60)
options(tibble.width = 100,width = 100)
library(tidyverse)
social<-read.csv("socsupport.csv")
social<-social%>%dplyr::select(-firstyr,-enrolment,-BDI,-emotionalsat,-X,-tangiblesat,-affectsat,-psisat,-esupport,-psupport)
head(social)
man1<-manova(cbind(emotional, tangible, affect,psi,supsources)~livewith,data=social)
summary(man1) ### 1 manova
summary.aov(man1) ### 2 anovas
pairwise.t.test(social$tangible, social$livewith, p.adj = "none") ###15
pairwise.t.test(social$affect, social$livewith, p.adj = "none") ###15
0.05/(1+2+15+15)
obs_F<-5.3107
Fs<-replicate(5000,{
new<-social%>%mutate(affect=sample(affect))
SSW<- new%>%group_by(livewith)%>%summarize(SSW=sum((affect-mean(affect))^2))%>% summarize(sum(SSW))%>%pull
SSB<- new%>%mutate(mean=mean(affect))%>%group_by(livewith)%>%mutate(groupmean=mean(affect))%>%summarize(SSB=sum((mean-groupmean)^2))%>%summarize(sum(SSB))%>%pull
(SSB/5)/(SSW/86)
})
hist(Fs, prob=T); abline(v = obs_F, col="red",add=T)
mean(Fs>obs_F)
library(sandwich)
library(lmtest)
fit3<-lm(emotional ~ affect * psi, data=social)
summary(fit3)
#mean center numeric variable
social$psi_c <- social$psi - mean(social$psi)
social$affect_c<- social$affect - mean(social$affect)
fitcenter<-lm(emotional ~ affect_c*psi_c, data=social)
summary(fitcenter)
#plot
new1<-social
new1$affect_c<-mean(social$affect_c)
new1$mean<-predict(fitcenter,new1)
new1$affect_c<-mean(social$affect_c)+sd(social$affect_c)
new1$plus.sd<-predict(fitcenter,new1)
new1$affect_c<-mean(social$affect_c)-sd(social$affect_c)
new1$minus.sd<-predict(fitcenter,new1)
newint<-new1%>%select(emotional,psi_c,mean,plus.sd,minus.sd)%>%gather(affect,value,-emotional,-psi_c)
mycols<-c("#619CFF","#F8766D","#00BA38")
names(mycols)<-c("-1 sd","mean","+1 sd")
mycols=as.factor(mycols)
ggplot(social,aes(psi_c,emotional),group=mycols)+geom_point()+geom_line(data=new1,aes(y=mean,color="mean"))+geom_line(data=new1,aes(y=plus.sd,color="+1 sd"))+geom_line(data=new1,aes(y=minus.sd,color="-1 sd"))+scale_color_manual(values=mycols)+labs(color="affect (cont)")+theme(legend.position=c(.9,.2))
#assumptions
resids<-fit3$residuals
fitvals<-fit3$fitted.values
ggplot()+geom_point(aes(fitvals,resids))+geom_hline(yintercept=0, col="red")
ggplot()+geom_histogram(aes(resids),bins=20)
ggplot()+geom_qq(aes(sample=resids))+geom_qq_line(aes(sample=resids), color='red')
#robust SE
coeftest(fitcenter, vcov = vcovHC(fitcenter))
boot_social<- sample_frac(social, replace=T)
samp_distn<-replicate(5000, {
boot_social <- sample_frac(social, replace=T)
fitcenter<-lm(emotional ~ affect_c * psi_c, data=boot_social)
coef(fitcenter)
})
samp_distn %>% t %>% as.data.frame %>% summarize_all(sd)
samp_distn %>% t %>% as.data.frame %>% gather %>% group_by(key) %>%summarize(lower=quantile(value,.025), upper=quantile(value,.975))
library(plotROC)
library(glmnet)
social<-social%>%dplyr::select(-psi_c,-affect_c)
social5 <- social %>% mutate(y = ifelse(gender == "female", 1, 0))
fit5<-glm(y~age + psi, family="binomial", data=social5)
coeftest(fit5)
exp(0.256087)
exp(0.467230)
exp(-1.766909)
exp( 0.024245)
exp(0.043900)
#confusion matrix
prob<-predict(fit5,type="response")
table(predict=as.numeric(prob>.5),truth=social5$y)%>%addmargins
69/71 #tpr
4/24 #tnr
69/89 #ppv
#plot
social5$logit<-predict(fit5,type="link")
social5%>%ggplot()+geom_density(aes(logit,color=gender,fill=gender), alpha=.4)+
theme(legend.position=c(.85,.85))+
geom_vline(xintercept=0)+xlab("logit(log-odds)")+
geom_rug(aes(logit,color=gender))+
geom_text(x=-5,y=.07,label="TN = 4")+
geom_text(x=-1.75,y=.008,label="FN = 2")+
geom_text(x=1,y=.006,label="FP = 20")+
geom_text(x=5,y=.04,label="TP = 69")
#roc curve and auc
pred <- ifelse(prob > 0.5, 1, 0)
ROCplot <- ggplot(social5) + geom_roc(aes(d = y, m = prob), n.cuts = 0) +geom_segment(aes(x = 0, xend = 1, y = 0, yend = 1), lty = 2)
ROCplot
calc_auc(ROCplot)
#10 fold
class_diag <- function(probs,truth){
tab<-table(factor(probs>.5,levels=c("FALSE","TRUE")),truth)
acc=sum(diag(tab))/sum(tab)
sens=tab[2,2]/colSums(tab)[2]
spec=tab[1,1]/colSums(tab)[1]
ppv=tab[2,2]/rowSums(tab)[2]
if(is.numeric(truth)==FALSE & is.logical(truth)==FALSE)
truth<-as.numeric(truth)-1
ord<-order(probs, decreasing=TRUE)
probs <- probs[ord]; truth <- truth[ord]
TPR=cumsum(truth)/max(1,sum(truth))
FPR=cumsum(!truth)/max(1,sum(!truth))
dup<-c(probs[-1]>=probs[-length(probs)], FALSE)
TPR<-c(0,TPR[!dup],1); FPR<-c(0,FPR[!dup],1)
n <- length(TPR)
auc<- sum( ((TPR[-1]+TPR[-n])/2) * (FPR[-1]-FPR[-n]) )
data.frame(acc,sens,spec,ppv,auc)}
set.seed(1234)
k=10
data<-social5[sample(nrow(social5)),]
folds<-cut(seq(1:nrow(social5)),breaks=k,labels=F)
diags<-NULL
for(i in 1:k){
train<-data[folds!=i,]
test<-data[folds==i,]
truth<-test$y
fit5<-glm(y~age + psi, data=train, family="binomial")
probs<-predict(fit5,newdata = test,type="response")
diags<-rbind(diags,class_diag(probs,truth))}
